/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/users/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Register */
        post: operations["register_users__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Login */
        post: operations["login_users_login_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Me */
        get: operations["get_me_users_me_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update Profile */
        patch: operations["update_profile_users_me_patch"];
        trace?: never;
    };
    "/users/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Logout */
        post: operations["logout_users_logout_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/refresh-session": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Refresh Session */
        post: operations["refresh_session_users_refresh_session_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/password-reset/request": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Password Reset Request */
        post: operations["password_reset_request_users_password_reset_request_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/password-reset/confirm": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Password Reset Confirm */
        post: operations["password_reset_confirm_users_password_reset_confirm_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/anonymous-session": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Anon Session */
        post: operations["create_anon_session_users_anonymous_session_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/google-login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Google Login */
        post: operations["google_login_users_google_login_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/facebook-login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Facebook Login */
        post: operations["facebook_login_users_facebook_login_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/dashboard": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Admin Dashboard */
        get: operations["admin_dashboard_admin_dashboard_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Admin Login Page */
        get: operations["admin_login_page_admin_login_get"];
        put?: never;
        /** Admin Login */
        post: operations["admin_login_admin_login_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Admin Logout */
        get: operations["admin_logout_admin_logout_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/analytics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Admin Analytics */
        get: operations["admin_analytics_admin_analytics_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/invitations/invitations/{invitation_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Invitation */
        get: operations["get_invitation_invitations_invitations__invitation_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/invitations/invitations/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Empty Invitation */
        post: operations["create_empty_invitation_invitations_invitations_create_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/invitations/invitations/update/{invitation_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update Invitation */
        patch: operations["update_invitation_invitations_invitations_update__invitation_id__patch"];
        trace?: never;
    };
    "/invitations/invitations/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Invitations */
        get: operations["list_invitations_invitations_invitations__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Body_admin_login_admin_login_post */
        Body_admin_login_admin_login_post: {
            /** Email */
            email: string;
            /** Password */
            password: string;
        };
        /** Body_update_profile_users_me_patch */
        Body_update_profile_users_me_patch: {
            /** Profile Picture */
            profile_picture?: string | null;
        };
        /** CategoryRead */
        CategoryRead: {
            /** Id */
            id: number;
            /** Name */
            name: string;
            /**
             * Subcategories
             * @default []
             */
            subcategories: components["schemas"]["SubCategoryRead"][] | null;
        };
        /** EventUpdate */
        EventUpdate: {
            /** Title */
            title: string;
            /**
             * Start Datetime
             * Format: date-time
             */
            start_datetime: string;
            /**
             * Finish Datetime
             * Format: date-time
             */
            finish_datetime: string;
            /** Location */
            location?: string | null;
            /** Description */
            description?: string | null;
            /** Calendar Link */
            calendar_link?: string | null;
            /** Location Link */
            location_link?: string | null;
        };
        /** FacebookLoginPayload */
        FacebookLoginPayload: {
            /** User */
            user: {
                [key: string]: unknown;
            };
        };
        /** GameRead */
        GameRead: {
            /** Id */
            id: number;
            /** Name */
            name: string;
            /** Key */
            key: string;
        };
        /** GoogleLoginPayload */
        GoogleLoginPayload: {
            /** Id Token */
            id_token: string;
        };
        /** GuestCreate */
        GuestCreate: {
            /** First Name */
            first_name: string;
            /** Last Name */
            last_name: string;
            /** Guest Type */
            guest_type: string;
            /**
             * Is Main Guest
             * @default false
             */
            is_main_guest: boolean;
            /** Menu Choice */
            menu_choice?: string | null;
        };
        /** GuestRead */
        GuestRead: {
            /** First Name */
            first_name: string;
            /** Last Name */
            last_name: string;
            /** Guest Type */
            guest_type: string;
            /**
             * Is Main Guest
             * @default false
             */
            is_main_guest: boolean;
            /** Menu Choice */
            menu_choice?: string | null;
            /** Id */
            id: number;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** InvitationRead */
        InvitationRead: {
            /** Title */
            title: string;
            /** Slug */
            slug?: string | null;
            /** Description */
            description?: string | null;
            /** Extra Info */
            extra_info?: string | null;
            /** Selected Game */
            selected_game?: string | null;
            /** Selected Slideshow */
            selected_slideshow?: string | null;
            /** Primary Color */
            primary_color?: string | null;
            /** Secondary Color */
            secondary_color?: string | null;
            /** Wallpaper */
            wallpaper?: string | null;
            /** Background Audio */
            background_audio?: string | null;
            /** Font */
            font?: string | null;
            /** Owner Id */
            owner_id?: number | null;
            /** Anon Session Id */
            anon_session_id?: string | null;
            /** Preview Token */
            preview_token?: string | null;
            /** Active From */
            active_from?: string | null;
            /** Active Until */
            active_until?: string | null;
            /**
             * Is Active
             * @default false
             */
            is_active: boolean | null;
            /** Category Id */
            category_id?: number | null;
            /** Subcategory Id */
            subcategory_id?: number | null;
            /** Template Id */
            template_id?: number | null;
            /** Id */
            id: number;
            /** Status */
            status: string;
            rsvp: components["schemas"]["RSVPRead"];
            category?: components["schemas"]["CategoryRead"] | null;
            subcategory?: components["schemas"]["SubCategoryRead"] | null;
            selected_game_obj?: components["schemas"]["GameRead"] | null;
            selected_slideshow_obj?: components["schemas"]["SlideshowRead"] | null;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Updated At
             * Format: date-time
             */
            updated_at: string;
        };
        /** InvitationUpdate */
        InvitationUpdate: {
            /** Title */
            title: string;
            /** Slug */
            slug?: string | null;
            /** Description */
            description?: string | null;
            /** Extra Info */
            extra_info?: string | null;
            /** Selected Game */
            selected_game?: string | null;
            /** Selected Slideshow */
            selected_slideshow?: string | null;
            /** Primary Color */
            primary_color?: string | null;
            /** Secondary Color */
            secondary_color?: string | null;
            /** Wallpaper */
            wallpaper?: string | null;
            /** Background Audio */
            background_audio?: string | null;
            /** Font */
            font?: string | null;
            /** Owner Id */
            owner_id?: number | null;
            /** Anon Session Id */
            anon_session_id?: string | null;
            /** Preview Token */
            preview_token?: string | null;
            /** Active From */
            active_from?: string | null;
            /** Active Until */
            active_until?: string | null;
            /**
             * Is Active
             * @default false
             */
            is_active: boolean | null;
            /** Category Id */
            category_id?: number | null;
            /** Subcategory Id */
            subcategory_id?: number | null;
            /** Template Id */
            template_id?: number | null;
            rsvp?: components["schemas"]["RSVPCreate"] | null;
            /** Events */
            events?: components["schemas"]["EventUpdate"][] | null;
            /** Slideshow Images */
            slideshow_images?: components["schemas"]["SlideshowImageCreate"][] | null;
        };
        /** PasswordResetConfirm */
        PasswordResetConfirm: {
            /** Token */
            token: string;
            /** New Password */
            new_password: string;
        };
        /** PasswordResetRequest */
        PasswordResetRequest: {
            /**
             * Email
             * Format: email
             */
            email: string;
        };
        /** RSVPCreate */
        RSVPCreate: {
            /**
             * Ask Menu
             * @default false
             */
            ask_menu: boolean;
            /**
             * Guests
             * @default []
             */
            guests: components["schemas"]["GuestCreate"][];
        };
        /** RSVPRead */
        RSVPRead: {
            /**
             * Ask Menu
             * @default false
             */
            ask_menu: boolean;
            /** Id */
            id: number;
            /**
             * Guests
             * @default []
             */
            guests: components["schemas"]["GuestRead"][];
        };
        /** SlideshowImageCreate */
        SlideshowImageCreate: {
            /** File Url */
            file_url: string;
            /**
             * Order
             * @default 0
             */
            order: number | null;
            /** Slideshow Id */
            slideshow_id: number;
            /** Invitation Id */
            invitation_id: number;
        };
        /** SlideshowRead */
        SlideshowRead: {
            /** Id */
            id: number;
            /** Name */
            name: string;
            /** Key */
            key: string;
        };
        /** SubCategoryRead */
        SubCategoryRead: {
            /** Id */
            id: number;
            /** Name */
            name: string;
        };
        /** UserCreate */
        UserCreate: {
            /**
             * Email
             * Format: email
             */
            email: string;
            /** Password */
            password: string;
            /** First Name */
            first_name: string;
            /** Last Name */
            last_name: string;
        };
        /** UserLogin */
        UserLogin: {
            /**
             * Email
             * Format: email
             */
            email: string;
            /** Password */
            password: string;
        };
        /** UserRead */
        UserRead: {
            /** Id */
            id: number;
            /**
             * Email
             * Format: email
             */
            email: string;
            /** First Name */
            first_name: string;
            /** Last Name */
            last_name: string;
            /** Profile Picture */
            profile_picture?: string | null;
        };
        /** UserUpdate */
        UserUpdate: {
            /** First Name */
            first_name: string;
            /** Last Name */
            last_name: string;
            /** Profile Picture */
            profile_picture?: string | null;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    register_users__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    login_users_login_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserLogin"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_me_users_me_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: {
                session_id?: string | null;
            };
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_profile_users_me_patch: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: {
                session_id?: string | null;
            };
        };
        requestBody?: {
            content: {
                "multipart/form-data": components["schemas"]["Body_update_profile_users_me_patch"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserUpdate"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    logout_users_logout_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: {
                session_id?: string | null;
            };
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    refresh_session_users_refresh_session_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: {
                session_id?: string | null;
            };
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    password_reset_request_users_password_reset_request_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PasswordResetRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    password_reset_confirm_users_password_reset_confirm_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PasswordResetConfirm"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_anon_session_users_anonymous_session_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    google_login_users_google_login_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GoogleLoginPayload"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    facebook_login_users_facebook_login_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["FacebookLoginPayload"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    admin_dashboard_admin_dashboard_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/html": string;
                };
            };
        };
    };
    admin_login_page_admin_login_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/html": string;
                };
            };
        };
    };
    admin_login_admin_login_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": components["schemas"]["Body_admin_login_admin_login_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/html": string;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    admin_logout_admin_logout_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    admin_analytics_admin_analytics_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/html": string;
                };
            };
        };
    };
    get_invitation_invitations_invitations__invitation_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                invitation_id: number;
            };
            cookie?: {
                anon_session_id?: string | null;
                session_id?: string | null;
            };
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvitationRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_empty_invitation_invitations_invitations_create_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: {
                anon_session_id?: string | null;
                session_id?: string | null;
            };
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvitationRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_invitation_invitations_invitations_update__invitation_id__patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                invitation_id: number;
            };
            cookie?: {
                anon_session_id?: string | null;
                session_id?: string | null;
            };
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["InvitationUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvitationRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_invitations_invitations_invitations__get: {
        parameters: {
            query?: {
                page?: number;
                page_size?: number;
            };
            header?: never;
            path?: never;
            cookie?: {
                anon_session_id?: string | null;
                session_id?: string | null;
            };
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: unknown;
                    };
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
